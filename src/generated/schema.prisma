generator client {
  provider = "prisma-client-js"
  output   = "../src/generated"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Language {
  en
  es
  fr
  de
  pt
  ja
  zh
  ko
}

enum ThemePreference {
  light
  dark
  system
}

enum CodeLanguage {
  javascript
  typescript
  python
  go
  rust
  html
  css
  cpp
  java
  sql
  json
  markdown
}

enum EditorTheme {
  dracula
  monokai
  solarized_light
  solarized_dark
  github_light
  github_dark
  nord
  night_owl
  catppuccin_latte
  catppuccin_frappe
  catppuccin_macchiato
  catppuccin_mocha
}

enum SnippetVisibility {
  public
  private
}

enum Providers {
  google
  github
  discord
}

model OAuthAccount {
  userId            String
  User              User      @relation(fields: [userId], references: [id])
  provider          Providers
  providerAccountId String    @unique
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
}

model LoginHistory {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  ip        String?
  userAgent String?
  location  String?
  createdAt DateTime @default(now())
}

model User {
  id                     String                   @id @default(cuid())
  image                  String?
  username               String
  email                  String                   @unique
  password               String?
  salt                   String?
  emailVerified          DateTime?
  createdAt              DateTime                 @default(now())
  updatedAt              DateTime                 @updatedAt
  accounts               OAuthAccount[]
  loginHistory           LoginHistory[]
  preferences            UserPreferences?
  snippets               Snippet[]
  EmailVerificationToken EmailVerificationToken[]
}

model EmailVerificationToken {
  id     String @id @default(cuid())
  userId String
  email  String
  token  String @unique

  verifiedAt DateTime?
  expiresAt  DateTime
  createdAt  DateTime  @default(now())

  user User @relation(fields: [userId], references: [id])

  @@unique([userId, token])
}

model UserPreferences {
  id                       String            @id @default(cuid())
  userId                   String            @unique
  language                 Language          @default(en)
  themePreference          ThemePreference   @default(system)
  editorTheme              EditorTheme       @default(catppuccin_latte)
  notifications            Boolean           @default(true)
  defaultCodeLanguage      CodeLanguage      @default(typescript)
  autosave                 Boolean           @default(true)
  lineNumbers              Boolean           @default(true)
  showWelcomeTips          Boolean           @default(true)
  defaultSnippetVisibility SnippetVisibility @default(public)
  editorFontSize           Int               @default(13)
  keyboardShortcuts        Boolean           @default(true)

  user User @relation(fields: [userId], references: [id])
}

model Tags {
  id String @id @default(cuid())

  name      String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  snippets  Snippet[]
}

model Snippet {
  id String @id @default(cuid())

  title       String
  description String?
  content     String

  language   CodeLanguage
  visibility SnippetVisibility @default(public)
  tags       Tags[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId String
  user   User   @relation(fields: [userId], references: [id])
}
